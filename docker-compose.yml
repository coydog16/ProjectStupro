version: '3.8'

services:
  # 総合開発環境コンテナ（VSCode DevContainerなどで使用）
  rootdev:
    build:
      context: .
      target: rootdev
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    volumes:
      # プロジェクトのルートディレクトリをマウント
      - ./:/workspace:delegated,z
      # node_modulesをボリュームにマウント
      - frontend_node_modules:/workspace/app/frontend/node_modules
    ports:
      - "3000:3000" # フロントエンド開発サーバー
      - "5000:5000" # バックエンド開発サーバー
    # VSCode DevContainer用の設定
    init: true
    environment:
      - NODE_ENV=development
      - FLASK_APP=app/backend/app/app.py
      - FLASK_DEBUG=1
      - HOST_UID=${UID:-1000}
      - HOST_GID=${GID:-1000}
    tty: true
    stdin_open: true
    command: sh -c "tail -f /dev/null"  # コンテナを起動したままにして手動で操作できるようにする
    networks:
      - navstupro

  # 個別サービス（従来の設定）
  backend:
    build: 
      context: .
      target: backend
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    volumes:
      - ./:/app
      - backend_venv:/app/app/backend/.venv
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.main
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/navstupro
      - PYTHONPATH=/app/app/backend
    depends_on:
      - db
    command: sh -c "tail -f /dev/null"  # コンテナを起動したままにするだけ
    networks:
      - navstupro

  frontend:
    build:
      context: .
      target: frontend
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    volumes:
      - ./:/app
      - frontend_node_modules:/app/app/frontend/node_modules
    ports:
      - "3000:3000"
    command: sh -c "tail -f /dev/null"  # コンテナを起動したままにするだけ
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:5000/api
    networks:
      - navstupro

  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/pgsql/logs:/var/log
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=navstupro
    ports:
      - "5432:5432"
    networks:
      - navstupro
      
  # 開発用DB管理ツール（pgAdmin 4）
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - navstupro

networks:
  navstupro:
    driver: bridge

volumes:
  postgres_data:
  frontend_node_modules:
  backend_venv:
  pgadmin_data:
