services:
  backend:
    build:
      context: ./docker/backend
    volumes:
      - ./app/backend:/app
    expose:
      - "5000"
    environment:
      - FLASK_APP=${FLASK_APP:-app.app:app}
      - FLASK_ENV=${FLASK_ENV:-development}
      - FLASK_DEBUG=${FLASK_DEBUG:-1}
      - SECRET_KEY=${SECRET_KEY:-dev_secret_key_please_change_in_production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-navStupro}:${POSTGRES_PASSWORD:-your_very_secure_password_here}@postgres:5432/${POSTGRES_DB:-navstupro}
    depends_on:
      - postgres
    command: sh -c "pip install -r requirements.txt && flask run --host=0.0.0.0"

  frontend:
    build:
      context: ./docker/frontend
    ports:
      - "3000:3000"
    volumes:
      - ./app/frontend:/app
      # Volume Trick: コンテナ内のnode_modulesをホストと切り離す
      - frontend_node_modules:/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - PORT=3000
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost/api}

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
    volumes:
      - ./app/backend:/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend

  postgres:
    build:
      context: ./docker/postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-navStupro}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_very_secure_password_here}
      - POSTGRES_DB=${POSTGRES_DB:-navstupro}
      - PGPASSWORD=${POSTGRES_PASSWORD:-your_very_secure_password_here}
    ports:
      - 5432:5432
    volumes:
      - ./db/pgsql/data:/var/lib/postgresql/data
      - ./db/pgsql/logs:/var/log

  # 開発用ツール
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres

# 名前付きボリュームの定義
volumes:
  frontend_node_modules: